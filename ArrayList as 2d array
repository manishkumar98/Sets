/* Java program for Multidimensional ArrayList */

Sample Input

3
11 2 4
4 5 6
10 8 -12
Sample Output

15
Explanation

The primary diagonal is:

11
   5
     -12
Sum across the primary diagonal: 11 + 5 - 12 = 4

The secondary diagonal is:

     4
   5
10
Sum across the secondary diagonal: 4 + 5 + 10 = 19
Difference: |4 - 19| = 15



import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'diagonalDifference' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts 2D_INTEGER_ARRAY arr as parameter.
     */

    public static int diagonalDifference(List<List<Integer>> arr) {
        
        int m=arr.size(),sum1=0,sum2=0;
        for(int i=0;i<m;i++){
            sum1+=arr.get(i).get(i);
            sum2+=arr.get(i).get(m-i-1);
        }

        int ans=Math.abs(sum1-sum2);
        return ans;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<List<Integer>> arr = new ArrayList<>();

        IntStream.range(0, n).forEach(i -> {
            try {
                arr.add(
                    Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
                        .map(Integer::parseInt)
                        .collect(toList())
                );
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });

        int result = Result.diagonalDifference(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}























import java.util.*; 

class MultidimensionalArrayList { 

	/*function for creating and returning 2D ArrayList*/
	static List create2DArrayList() 
	{ 
		/*Declaring 2D ArrayList*/
		ArrayList<ArrayList<Integer> > x 
			= new ArrayList<ArrayList<Integer> >(); 

		/*one space allocated for 0th row*/
		x.add(new ArrayList<Integer>()); 

		/*Adding 3 to 0th row created above x(0, 0)*/
		x.get(0).add(0, 3); 

		/*Creating 1st row and adding values 
	(another way for adding values in 2D collections)*/
		x.add(new ArrayList<Integer>(Arrays.asList(3, 4, 6))); 

		/*Add 366 to 1st row 0th column x(1, 0)*/
		x.get(1).add(0, 366); 

		/*Add 576 to 1st row 4th column x(1, 4)*/
		x.get(1).add(4, 576); 

		/*Adding values to 2nd row*/
		x.add(2, new ArrayList<>(Arrays.asList(3, 84))); 

		/*Adding values to 3rd row*/
		x.add(new ArrayList<Integer>(Arrays.asList(83, 6684, 776))); 

		/*Adding values to 4th row*/
		x.add(new ArrayList<>(Arrays.asList(8))); 

		return x; 
	} 

	public static void main(String args[]) 
	{ 
		System.out.println("2D ArrayList :"); 

		/*Printing 2D ArrayList*/
		System.out.println(create2DArrayList()); 
	} 
} 
